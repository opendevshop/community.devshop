---
dependency:
  name: galaxy
  options:
    role-file: roles.yml
    requirements-file: roles.yml
    roles-path: roles/contrib
    # Collections are not roles. Don't include in the platform codebase unless necessary.
    # collections-path: roles/contrib
    force: false

driver:
  name: docker

platforms:
  # Set to match inventory hosts
  - name: site.local.computer
    image: "geerlingguy/docker-${MOLECULE_DISTRO:-ubuntu1804}-ansible:latest"
    command: ${MOLECULE_DOCKER_COMMAND:-""}
    volumes:
      - /sys/fs/cgroup:/sys/fs/cgroup:ro
      - /var/lib/docker
    privileged: true
    pre_build_image: true
    exposed_ports:
      - '80:80'

playbooks:
    converge: ${MOLECULE_PLAYBOOK:-converge.yml}

provisioner:
  name: ansible
  inventory:
    links:
      # Gets added as a symlink called "inventory" in the test.
      hosts: ../../${ANSIBLE_INVENTORY:-examples/single-site}

  ansible_args:
    - "--inventory=services"
    - "${ARGS:---diff}"
    - "-e force_build=true"

  connection_options:
    ansible_connection: docker

  env:
    ANSIBLE_ROLES_PATH: ../../roles:../../roles/contrib
    ANSIBLE_VARS_PLUGINS: ./plugins/vars

  # Explicitly set ansible.cfg here. Do not use ansible.cfg to ensure the platform works regardless of that config.
  config_options:
    defaults:
      stdout_callback: yaml
      vars_plugins_enabled: host_group_vars,devshop.platform.service_vars

      # NOT ALLOWED.
      # roles_path: ./roles:./roles/contrib
      # collections_path: ../../roles/contrib

    vars_service_vars:
      # Vars plugin will load on every step unless this is set.
      stage: inventory

    connection:
      pipelining: true

verifier:
  name: ansible
