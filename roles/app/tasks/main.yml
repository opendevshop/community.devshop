---
- name: Gather App Host Facts
  gather_facts:
  tags:
    - always

- name: Prevent the role from running as root.
  fail:
    msg: "The devshop_app_user role should not be root."
  when: devshop_app_user == 'root'

- name: DevShop.App Role
  tags:
    - about
  debug:
    msg: |
      ---------------------------------
      Welcome to the DevShop.App role.
      ---------------------------------
      {{ devshop_app_name }}.{{ devshop_app_environment }}
      ---------------------------------

      inventory_hostname: {{ inventory_hostname }}
      ansible_host:   {{ ansible_host }}
      nodename: {{ ansible_facts.nodename }}
      ansible_default_ipv4.address: {{ ansible_default_ipv4.address }}
      ansible_connection: {{ ansible_connection }}

      groups:
      {{ group_names | to_nice_yaml }}

      ---------------------------------
      Git Repository: {{ devshop_app_git_repository }}
      Git Reference:  {{ devshop_app_git_reference }}
      Git Root:       {{ devshop_app_git_root }}
      inventory_dir:  {{ inventory_dir }}
      ---------------------------------
      Servers:
      {{ devshop_app_servers | to_nice_yaml }}
      ---------------------------------
      devshop_app_user: {{ devshop_app_user }}
      ---------------------------------
      devshop_app_commands_log_file: {{ devshop_app_commands_log_file }}

      force_commands: {{ force_commands }}
      force_install: {{ force_install }}

- name: Gather Service Vars
  loop: "{{ devshop_app_servers | dict2items }}"
  loop_control:
    loop_var: loop_item
  when: loop_item.value
  include_role:
    name: service
    public: true
    tasks_from: "{{ loop_item.key }}.yml"
    defaults_from: "{{ loop_item.key }}.yml"
  vars:
    devshop_host_service: "{{ loop_item.key }}"
    devshop_app_service_host: "{{ loop_item.value }}"


- name: Prepare Parent Directory
  file:
    path: "{{ devshop_app_git_root }}"
    state: directory
    owner: "{{ devshop_app_user }}"
    group: "{{ devshop_app_user_group }}"
    mode: '0755'

- name: Run App Tasks.
  include_role:
    name: "{{ devshop_app_role }}"
    defaults_from: "{{ devshop_app_role_defaults_from }}"
    tasks_from: "{{ devshop_app_role_tasks_from }}"

- name: Deploy code from Git

  # On idempotent test runs, any changes to the working copy cause failure.
  # This can happen when build scripts are run.
  # To allow molecule idempotency to pass, this tag is added.
  changed_when:
    - '"molecule-idempotence-notest" not in ansible_skip_tags'
    - git_results.changed
  become: yes
  become_user: "{{ devshop_app_user }}"
  git:
    repo: "{{ devshop_app_git_repository }}"
    version: "{{ devshop_app_git_reference }}"
    dest: "{{ devshop_app_git_root }}"
    accept_hostkey: yes
    force: "{{ devshop_app_git_force }}"
    recursive: "{{ devshop_app_git_recursive }}"
    track_submodules: "{{ devshop_app_git_track_submodules }}"
  register: git_results

- name: Run Post-Git Tasks.
  include_role:
    name: "{{ devshop_app_role }}"
    defaults_from: "{{ devshop_app_role_defaults_from }}"
    tasks_from: "{{ devshop_app_type }}.post-git.yml"

# Launch Logic:
# Task will RUN if:
#  - there are git changes OR
#  - force_commands is set.
# Task is changed_when:
#   - Play run is NOT the molecule idempotency test.
#   - changed_when is otherwise always TRUE in order to trigger the "git changed" handler.
- name: Launching Command Stages
  when: force_commands or git_results.changed == true
  changed_when: '"molecule-idempotence-notest" not in ansible_skip_tags'
  debug:
    msg: |
      Launching App Commands for {{ inventory_hostname }}...
      {{ devshop_app_git_repository }}
      {{ devshop_app_git_reference }}
      
      {% if git_results.changed: %}
      Reason: Git changes detected.
      {% endif %}
      {% if force_commands: %}
      Reason: force_commands was set.
      {% endif %}

      devshop_app_installed: {{ devshop_app_installed }}

      Git State:
      {{ git_results | to_nice_yaml }}
  notify:
    - git changed

- meta: flush_handlers
